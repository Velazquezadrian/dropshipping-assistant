# üîß Archivo de Configuraci√≥n - .env.example

# Copia este archivo como .env y configura tus valores reales
# cp .env.example .env

# ===== CONFIGURACI√ìN DJANGO =====
SECRET_KEY=django-insecure-cambia-esta-clave-por-una-segura-en-produccion
DEBUG=True
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# ===== NOTIFICACIONES (CONFIGURAR PARA BOT AUTOM√ÅTICO) =====
# Discord Webhook URL - para notificaciones autom√°ticas
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/TU_WEBHOOK_ID/TU_WEBHOOK_TOKEN

# Telegram Bot - para notificaciones autom√°ticas  
TELEGRAM_BOT_TOKEN=123456789:ABCDEF1234567890abcdef1234567890abcdef
TELEGRAM_CHAT_ID=-123456789

# ===== BASE DE DATOS =====
# Para desarrollo (SQLite) - no necesitas cambiar nada
# Para producci√≥n (PostgreSQL) - descomenta y configura:
# DATABASE_URL=postgresql://usuario:password@localhost:5432/dropship_db
DATABASE_NAME=dropship_bot
DATABASE_USER=postgres
DATABASE_PASSWORD=password
DATABASE_HOST=localhost
DATABASE_PORT=5432

# ===== NOTIFICACIONES TELEGRAM =====
# 1. Crear bot: habla con @BotFather en Telegram
# 2. Obtener token del bot
TELEGRAM_BOT_TOKEN=123456789:ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789

# 3. Obtener Chat ID: env√≠a mensaje a tu bot, luego visita:
# https://api.telegram.org/bot<TU_TOKEN>/getUpdates
TELEGRAM_CHAT_ID=123456789

# ===== NOTIFICACIONES DISCORD =====
# 1. En tu servidor Discord: Configuraci√≥n ‚Üí Integraciones ‚Üí Webhooks
# 2. Crear nuevo webhook y copiar la URL
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/123456789/abcdefghijklmnopqrstuvwxyz

# ===== CONFIGURACI√ìN DE SCRAPING =====
# Intervalo de scraping en minutos (por defecto: 30)
SCRAPING_INTERVAL=30

# N√∫mero de productos por plataforma por scraping (por defecto: 5)
PRODUCTS_PER_SCRAPING=5

# ===== LOGGING =====
LOG_LEVEL=INFO
LOG_FILE=dropship_bot.log

# ===== CACHE (REDIS) - Para producci√≥n =====
# REDIS_URL=redis://localhost:6379/1

# ===== CONFIGURACI√ìN DE SEGURIDAD - Para producci√≥n =====
# SECURE_SSL_REDIRECT=True
# SECURE_HSTS_SECONDS=31536000
# SESSION_COOKIE_SECURE=True
# CSRF_COOKIE_SECURE=True

# ===== MONITOREO - Para producci√≥n =====
# SENTRY_DSN=https://tu-dsn@sentry.io/proyecto

# ===== CONFIGURACI√ìN DE EMAIL - Para notificaciones por email =====
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER=tu_email@gmail.com
# EMAIL_HOST_PASSWORD=tu_password_de_app

# ===== CONFIGURACI√ìN PERSONALIZADA =====
# Plataformas activas para scraping (separadas por coma)
ACTIVE_PLATFORMS=mock,aliexpress

# Filtros autom√°ticos (productos que NO se guardar√°n)
AUTO_FILTER_MIN_PRICE=1.00
AUTO_FILTER_MAX_PRICE=1000.00
AUTO_FILTER_MIN_RATING=2.0

# ===== CONFIGURACI√ìN DE API =====
# N√∫mero de elementos por p√°gina en la API (por defecto: 20)
API_PAGE_SIZE=20

# ===== CONFIGURACI√ìN DE PROXY (si es necesario para scraping) =====
# HTTP_PROXY=http://proxy.ejemplo.com:8080
# HTTPS_PROXY=https://proxy.ejemplo.com:8080

# ===== CONFIGURACI√ìN DE TIMEZONE =====
TIME_ZONE=UTC
# Otros ejemplos:
# TIME_ZONE=America/Mexico_City
# TIME_ZONE=Europe/Madrid
# TIME_ZONE=America/New_York